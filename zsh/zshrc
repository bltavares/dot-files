export LANG=en_US.UTF-8 LC_CTYPE="en_US.UTF-8"
export PATH="$HOME/bin:$HOME/.cask/bin:$PATH"
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="fringe-no-battery"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(heroku git_ps1 no_git_ps1 aliases lein)

source $ZSH/oh-my-zsh.sh

alias tw='t timeline -r'
rtw () {
  t timeline -l | awk "FNR==$1{ print \$1}" | xargs t retweet
}
genpasswd() {
  grep "^[^'A-Z]\{3,7\}$" /usr/share/dict/words | shuf -n4 | tr '\n' ' ' | sed 's/\b\(.\)/\u\1/g' | sed 's/ //g'
}

camelize() {
  read phrases
  echo -e "$phrases" | perl -pe 's/\b(.)/\u\1/g' | sed 's/ //g'
}


GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM=true

alias repos="cd ~/repos"
alias pw="password"

alias be="bundle exec "
alias minecraft="java -Xmx1660M -Xms1660M -jar ~/minecraft.jar"
if which hub > /dev/null; then
  alias g="hub"
  eval "$(hub alias -s)"
else
  alias g="git"
fi

switch-branch() {
  git branch | cut -c 3- | selecta | xargs git checkout
}

checkout-branch() {
  branch=${1:-origin}
  git branch -r | grep "$branch/" | cut -d'/' -f 2- | selecta | xargs -I{} git checkout -b '{}' $branch/'{}'
}
p() { cd $(find ~/Projects ~/repos -type d -maxdepth 1 | selecta) }

function say {
lang=${2:-en}
mplayer -really-quiet "http://translate.google.com/translate_tts?tl=$lang&q=$1"
}

function tim {
tags
vim
}


if [[ "$TERM" == "xterm" ]]; then
  # No it isn't, it's gnome-terminal
  export TERM=xterm-256color
fi

export EDITOR=vim

docker-run() {
  docker run --rm -i -t -v $(pwd):/data/src -w /data/src "$@"
}

docker-cleanup() {
  containers="`docker ps -q -a`"

  if [ -z $containers ]; then
    echo "No containers to cleanup" && return 1
  fi

  xargs docker rm <<<"$containers"
}

docker-info() {
  containers="`docker ps -q`"

  if [ -z $containers ]; then
    echo "No containers running" && return 1
  fi

  xargs docker inspect \
    --format='{{.Config.Image}}, {{.NetworkSettings.IPAddress}}, {{range $p, $conf := .NetworkSettings.Ports}} {{$p}} -> {{(index $conf 0).HostPort}} {{end}}' \
    <<<"$containers"
}

dockerize() {
  alias lein='docker-run -p 9797 bltavares/clojure lein'
  alias ghci='docker-run zsol/haskell-platform-2013.2.0.0 ghci'
  go() {
    docker-run bltavares/go "go $@"
  }
  gofmt() {
    docker-run bltavares/go "gofmt $@"
  }
  godoc() {
    docker-run bltavares/go "godoc $@"
  }
}

if [[ -f $HOME/.host_specific ]] then
  source $HOME/.host_specific
fi
